{{ 'fake-product-purchase.css' | asset_url |   stylesheet_tag: preload: true }}

{% if section.settings.enable-fake-popup %}
  <ul class="fake-product-purchased text-{{ section.settings.popup-position }}">
    {% for block in section.blocks %}
      {%- assign card_product = all_products[block.settings.product] -%}
        <li class="fake-product-product">
          
            <a class="fake-product-main-title" href="{{ card_product.url | within: collection }}">      
              <div class="fake-product-image">
                <img
                  srcset="{{ card_product.featured_image.src | image_url: width: 165 }} 165w"
                  src="{{ card_product.featured_image.src | image_url: width: 165 }}"
                  sizes="(min-width: 750px) calc((100vw - 120px) / 3), calc((100vw - 35px) / 2)"
                  alt="{{ card_product.featured_image.src.alt | escape }}"
                  class="featured-image teaser lazyload"
                  loading="lazy"
                  width="{{ card_product.featured_image.src.width }}"
                  height="{{ card_product.featured_image.src.height }}"
                >
                {% if block.settings.first-banner-image != blank %}
                  <div class="media media--transparent ratio" style="--ratio-percent: {{ block.settings.image-ratio }}%">
                    {{ block.settings.first-banner-image | image_url: width: 1920 | image_tag : loading: 'lazy', class: 'w-100' }}
                  </div>
                {% else %}
                  <div class="media media--transparent ratio" style="--ratio-percent: {{ block.settings.image-ratio }}%">
                    {{ 'collection-1' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
                  </div>
                {% endif %}
              </div>
              <div class="fake-product-details">
                <div class="purchased">{{ block.settings.address }}</div>
                <div class="fake-product-title">{{ card_product.title | truncate: 25 }}</div>
                <div class="time-verify">
                  <div class="timing">
                    <span>{% render 'icon-watch' %}</span>
                    <span>{{ block.settings.time }}</span>
                  </div>
                  <div class="verification-fake">
                    <span class="check-mark">{% render 'icon-checkcircle' %}</span>
                    <span>Verified</span>
                  </div>
                </div>
              </div>
            </a>
    
          <button title="Close" class="close-button">
            {% render 'icon-close' %}
          </button>
    
        </li>           
    {% endfor %}
  </ul>

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function () {
  {% if section.settings.enable-fake-popup %}
    var elements = document.querySelectorAll('.fake-product-purchased li');
    var init_element = 0;
    var i = 0;

    for (var j = 0; j < elements.length; j++) {
      elements[j].classList.remove('active');
    }

    function fadeInRandomElement() {
      if (i % 2 === 0) {
        var currentItem = elements[init_element];

        // Check if currentItem is defined before manipulating its classList
        if (currentItem) {
          currentItem.classList.add('active');
          setTimeout(function () {
            currentItem.classList.remove('active');
          }, {{ section.settings.timer_to_call }});

          init_element++;
          if (elements.length === init_element) {
            init_element = 0;
          }
        }
      }
      i++;
    }
    setInterval(function () {
      fadeInRandomElement();
    }, {{ section.settings.timer_to_call }});
  {% endif %}
});
  document.addEventListener('DOMContentLoaded', function () {
    var closeButtons = document.querySelectorAll('.close-button');

    closeButtons.forEach(function (button) {
      button.addEventListener('click', function () {
        var productData = this.closest('.customer-purchased');
        if (productData) {
          productData.style.display = 'none';
        }
      });
    });
  });
</script>
{% endif %}

{% style %}
  .verification-fake .check-mark:before {
    content: "";
    position: absolute;
    width: 16px;
    height: 16px;
    border-radius: 100%;
    top: 1px;
    left: 1px;
    line-height: 1;
    -webkit-animation: faketimer 1.2s linear infinite;
    animation: faketimer 1.2s linear infinite;
  }
  @-webkit-keyframes faketimer {
      0% {
          opacity: .7;
          box-shadow: 0 0 0 0 {{ section.settings.verify_text_color }};
      }
      100% {
          opacity: 0;
          box-shadow: 0 0 0 7px {{ section.settings.verify_text_color }};
      }
  }
  @keyframes faketimer {
      0% {
          opacity: .7;
          box-shadow: 0 0 0 0 {{ section.settings.verify_text_color }};
      }
      100% {
          opacity: 0;
          box-shadow: 0 0 0 7px {{ section.settings.verify_text_color }};
      }
  }
  .fake-product-purchased .fake-product-product {
    background-color: {{ section.settings.section_bg }};
  }
  .fake-product-purchased .fake-product-title{
    color: {{ section.settings.title_text_color }};
    font-weight: 800;
  }
  .fake-product-purchased .purchased{
    color: {{ section.settings.Custom_text_color }};
    border-bottom: 1px {{ section.settings.border_style }} {{ section.settings.border_color }};
  }
  .time-verify .timing{
    color: {{ section.settings.time_text_color }};
  }
  .time-verify .timing svg{
    stroke: {{ section.settings.time_text_color }};
  }
  .time-verify .verification-fake{
    color: {{ section.settings.verify_text_color }};
  }
  .time-verify .verification-fake svg{
    stroke: {{ section.settings.verify_text_color }};
  }
  .fake-product-purchased .fake-product-product .close-button {
    background-color: {{ settings.button_bg }};
    color: {{ settings.button_text }};
  }
  .fake-product-purchased .fake-product-product .close-button:hover {
    background-color: {{ settings.button_hr_bg }};
    color: {{ settings.button_hr_text }};
  }
  
{% endstyle %}
 
{% schema %}
{
  "name": "Fake product purchased",
  "class": "customer-purchased",
  "limit": 1,
  "enabled_on": {
    "groups": ["footer"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "enable-fake-popup",
      "label": "Enable fake popup",
      "default": true
    },
    {
      "type": "select",
      "id": "popup-position",
      "label": "Popup position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "text",
      "id": "timer_to_call",
      "label": "Popup in/out time",
      "default": "5000",
      "info": "Pass the value 5000, which represents 5 seconds."
    },
    {
      "type": "select",
      "id": "border_style",
      "label": "Border style",
      "options": [
        {
          "value": "solid",
          "label": "Solid"
        },
        {
          "value": "dashed",
          "label": "Dashed"
        },
        {
          "value": "dotted",
          "label": "Dotted"
        }
      ],
      "default": "dashed"
    },
    {
      "type": "header",
      "content": "t:sections.social_media_collage.settings.color_setting"
    },
    {
      "type": "color",
      "id": "section_bg",
      "label": "t:sections.social_media_collage.settings.section_background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "Custom_text_color",
      "label": "Custom text",
      "default": "#89909D"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#89909D"
    },
    {
      "type": "color",
      "id": "title_text_color",
      "label": "Product title",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "time_text_color",
      "label": "Time text",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "verify_text_color",
      "label": "Verify text",
      "default": "#34ad5e"
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        },
        {
          "type": "text",
          "id": "address",
          "default": "Jacklin Purchased ! - From USA",
          "label": "Location"
        },
        {
          "type": "text",
          "id": "time",
          "default": "5 minute ago",
          "label": "Time"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Fake product purchased",
      "category": "Footer",
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        }
      ]
    }
  ]
}
{% endschema %}